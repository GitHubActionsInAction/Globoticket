name: "chapter 08: Security Testing"
 
env:
  imageRepository: 'frontend'
  containerRegistry: 'ghcr.io/xpiritcommunityevents'
  dockerfilePath: 'frontend/Dockerfile'

on:
  workflow_dispatch:

jobs:
  # run the codeql analysis on the code
  # we use a matrix to run the analysis on multiple languages
  # we define the languages c# and javascript
  analyzecode:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
 
  # next we run the trivy vulnerability scanner on our container images
  # this way we can find vulnerabilities in our container images
  # we need to determine the latest version of the images and use that version to scan  
  analyzecontainers:    
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      #determine the version of the image
      - name: Install GitVersion 
        uses: gittools/actions/gitversion/setup@v0.10.2
        with: 
          versionSpec: '5.x'

      - name: Determine Version 
        id: gitversion 
        uses: gittools/actions/gitversion/execute@v0.10.2 
      
        # use trivy to scan the container image
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{env.containerRegistry}}/${{env.imageRepository}}:${{env.GitVersion_SemVer}}
          format: 'sarif'
          output: 'trivy-results.sarif'
        env:
          TRIVY_USERNAME:  ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      # upload the results to the security tab in github   
      # this is the same place where the codeql results are uploaded 
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'        
